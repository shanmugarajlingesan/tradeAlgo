name: Scan Crypto

on:
  schedule:
    - cron: "5 * * * *"     # every hour at :05 (UTC)
  workflow_dispatch:

jobs:
  run-scan:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
            python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run scanner
        env:
          EXCHANGE_ID: "bybit"
          MIN_SCORE: "70"
          TOP_K: "8"
          BTC_GUARD_MODE: "soft"
          REQUIRE_BTC_TREND: "true"
        run: |
          python crypto_long_scanner.py || true
          mkdir -p docs
          # If your script already writes scan_results.csv, copy it to docs
          if [ -f scan_results.csv ]; then cp scan_results.csv docs/; fi

      - name: Build JSON snapshot
        run: |
          # Write a tiny Python script without heredocs
          printf '%s\n' \
          "import os, pandas as pd" \
          "os.makedirs('docs', exist_ok=True)" \
          "p='scan_results.csv'; q='docs/scan_results.json'" \
          "open(q,'w').write(pd.read_csv(p).to_json(orient='records') if os.path.exists(p) else '[]')" \
          > mkjson.py
          python mkjson.py
          rm -f mkjson.py

      - name: Commit & push artifacts to Pages folder (docs/)
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git add docs/*
          git commit -m "update scan results" || echo "no changes"
          git push
